# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏
import telebot
from telebot import *
from telebot.types import ReplyKeyboardMarkup
from telebot.types import InputMediaPhoto
#import html5lib
import sets
import funcs as fn
import handlers as hn
from time import sleep


my_chat_ID = 722555232
# –¢–∏–ø–æ –æ–Ω –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω—ã–π
MEMORY = {}
# –§–∞–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ html /home/pip/Desktop/bot
DATA_FILE_PATH = '/home/pip/Desktop/bot/–õ–∏—Å—Ç1.html'
# –§–∞–∏–ª –∑–≤–æ–Ω–∫–æ–≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
Mcalls = '/home/pip/Desktop/bot/–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫.jpg'
# –§–∞–∏–ª –∑–≤–æ–Ω–∫–æ–≤ –≤—Ç–æ—Ä–Ω–∏–∫ - –ø—è—Ç–Ω–∏—Ü–∞
Bcalls = '/home/pip/Desktop/bot/–í—Ç–æ—Ä–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞.jpg'
# –§–∞–∏–ª –∑–≤–æ–Ω–∫–æ–≤ —Å—É–±–±–æ—Ç–∞
Scalls = '/home/pip/Desktop/bot/–°—É–±–±–æ—Ç–∞.jpg'
# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
bot = telebot.TeleBot('TOKEN')


# –¢–æ–∫–µ–Ω —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞
#bot = telebot.TeleBot('755635624:AAH5Af2ZNRtDf2wKOm5bF1mWXLzIl4slRx8')


# –§—É–Ω–∫—Ü–∏–∏
def add_startup_keyboard():
    """–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—é—â–∞—è –Ω–∞—á–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(sets.schedule)
    markup.add(sets.calls)
    markup.add(sets.Ya)
    return markup


def startup_keyboard():
    """–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—é—â–∞—è –Ω–∞—á–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(sets.menu)
    return markup


def back_day_keyboard():
    """–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—é—â–∞—è –Ω–∞—á–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(sets.back_day)
    markup.add(sets.menu)
    return markup


def schedule_keyboard():
    """–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—é—â–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for x, y, z in fn.grouped(sets.areas, 3):
        markup.add(x, y, z)
    markup.add(sets.menu)
    return markup


def data_keyboard():
    """–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—é—â–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã sets.mon,"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(sets.back)
    markup.add(sets.tue, sets.wed)
    markup.add(sets.thu, sets.fri, sets.sat)
    markup.add(sets.menu)
    return markup


def send_message_to_user(message, text, keyboard=None):
    """–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    # –û—Ç–ø—Ä–∞–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –¥–æ–±–∞–≤–∏–º –Ω—É–∂–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    msg = bot.send_message(message.chat.id, text, reply_markup=keyboard)


# –û—Ç–ø—Ä–∞–≤–ª—è—é —Å–µ–±–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ
msg = bot.send_message(my_chat_ID, f'–ë–æ—Å—Å, —è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–ª—Å—è.\n–ù–∞—á–∞–ª —Ä–∞–±–æ—Ç—É')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É, —Ç–æ —Ä–∞–±–æ—Ç–∞–µ–º —Å –Ω–∏–º. –ù–∞–ø–∏—à–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    hn.start_handler(message, MEMORY, bot, keyboard=add_startup_keyboard())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def function_ya(message):
    try:
        if message.text in sets.main_functions:
            # –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—Å–Ω–æ–≤—ã–Ω—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞
            hn.main_func_handler(message, MEMORY, bot, keyboard=schedule_keyboard())
        elif message.text in sets.Ya:
            # –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
            hn.secondary_functions(message, bot, keyboard=startup_keyboard())
        elif message.text in sets.areas and MEMORY[message.chat.id][0] == sets.schedule:
            # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥—Ä—É–ø–ø
            hn.group_handler(message, MEMORY, bot, keyboard=data_keyboard())
        elif message.text in sets.days and MEMORY[message.chat.id][1] in sets.areas:
            # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–Ω–µ–π –≤—Ç–æ—Ä–Ω–∏–∫ - —Å—É–±–±–æ—Ç–∞ –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–¥–∞—á–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            hn.day_handler(message, MEMORY, bot, keyboard=back_day_keyboard())
            hn.get_schedule_handler(message, bot, DATA_FILE_PATH, MEMORY[message.chat.id], MEMORY,
                                    keyboard=back_day_keyboard())
        elif message.text in sets.mon and MEMORY[message.chat.id][1] in sets.areas:
            # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–¥–∞—á–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            hn.day_handler(message, MEMORY, bot, keyboard=back_day_keyboard())
            hn.get_mon_schedule_handler(message, bot, DATA_FILE_PATH, MEMORY[message.chat.id], MEMORY,
                                        keyboard=back_day_keyboard())
        elif message.text in sets.calls:
            # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∑–≤–æ–Ω–∫–æ–≤
            hn.calls_handler(message, bot, Mcalls, Bcalls, Scalls, keyboard=startup_keyboard())
        elif message.text in sets.menu:
            # –§—É–Ω–∫—Ü–∏—è –º–µ–Ω—é
            hn.start_handler(message, MEMORY, bot, keyboard=add_startup_keyboard())
        elif message.text in sets.back and MEMORY[message.chat.id][0] == sets.schedule:
            # –ó–∞–º–µ–Ω–∞ –≥—Ä—É–ø–ø—ã
            hn.back_group(message, MEMORY)
            hn.back_func_handler(message, bot, keyboard=schedule_keyboard())
        elif message.text in sets.back_day and MEMORY[message.chat.id][1] in sets.areas:
            # –ó–∞–º–µ–Ω–∞ –¥–Ω—è
            hn.back_group(message, MEMORY)
            hn.back_func_day(message, bot, keyboard=data_keyboard())
        else:
            # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –ø–∞—Ä–∞—à—É, —à–ª–µ–º –µ–≥–æ
            pass
    except:
        send_message_to_user(message, f'–£–ø—Åüòì... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –¥–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–Ω–æ–≤–æ', startup_keyboard())


bot.infinity_polling()
