"""–ò–º–ø–æ—Ä—Ç—ã"""
# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
import telebot
from telebot import *
from telebot.types import ReplyKeyboardMarkup
from telebot.types import InputMediaPhoto

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
import sets
import funcs as fn
import handlers as hn
import check as ch
import key as k

"""–í–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ"""
# –ú–æ–π —á–∞—Ç –∞–π–¥–∏
my_chat_ID = 722555232

# –§–∞–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ html
DATA_FILE_PATH = '–õ–∏—Å—Ç1.html'
# –§–∞–∏–ª –∑–≤–æ–Ω–∫–æ–≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
Mcalls = './images/–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫.png'
# –§–∞–∏–ª –∑–≤–æ–Ω–∫–æ–≤ –≤—Ç–æ—Ä–Ω–∏–∫ - –ø—è—Ç–Ω–∏—Ü–∞
Bcalls = './images/–í—Ç–æ—Ä–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞.jpg'
# –§–∞–∏–ª –∑–≤–æ–Ω–∫–æ–≤ —Å—É–±–±–æ—Ç–∞
Scalls = './images/–°—É–±–±–æ—Ç–∞.jpg'
# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
# bot = telebot.TeleBot(k.TOKEN)

# –¢–æ–∫–µ–Ω —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞
bot = telebot.TeleBot(k.TEST_TOKEN)


def schedule_keyboard():
    """–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—é—â–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for x, y, z in fn.grouped(sets.areas, 3):
        markup.add(x, y, z)
    return markup


def basic_keyboard():
    """–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—é—â–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(sets.calls)
    markup.add(sets.mon, sets.tue, sets.wed)
    markup.add(sets.thu, sets.fri, sets.sat)
    markup.add(sets.Ya)
    return markup


def fasten_keyboard():
    """–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—é—â–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã """
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton(text=sets.fix, callback_data='fix'))
    return markup


# –û—Ç–ø—Ä–∞–≤–ª—è—é —Å–µ–±–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ
msg = bot.send_message(my_chat_ID, f'–í—Å—ë –∏—Å–ø—Ä–∞–≤–Ω–æ –ë–æ—Å—Å!\n–ù–∞—á–∞–ª —Ä–∞–±–æ—Ç—É')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É, —Ç–æ —Ä–∞–±–æ—Ç–∞–µ–º —Å –Ω–∏–º. –ù–∞–ø–∏—à–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if not ch.init_user_verif_func(message):
        hn.start_handler(message, bot, keyboard=schedule_keyboard())
    else:
        hn.sending_message(message, bot, '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É', keyboard=schedule_keyboard())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def function_ya(message):
    # –ü—Ä–æ–ø–∏—Å–∞—Ç—å try –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –æ—à–∏–±–æ–∫
    if not ch.init_user_verif_func(message):
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —é–∑–µ—Ä–æ–≤
        hn.start_handler(message, bot, keyboard=schedule_keyboard())
    else:
        if message.text in sets.areas:
            # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥—Ä—É–ø–ø
            hn.group_handler(message, bot, keyboard=basic_keyboard())
        elif message.text in sets.days:
            # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–Ω—è –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–¥–∞—á–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            hn.day_handler(message, bot)
            hn.get_schedule_handler(message, bot, DATA_FILE_PATH)
            hn.number_requests(message)
            hn.sending_message(message, bot, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –∏–ª–∏ —Ä–∞–∑–¥–µ–ª, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.üòâ', keyboard=basic_keyboard())

        elif message.text in sets.Ya:
            # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–º–µ–Ω—ã –≥—Ä—É–ø–ø—ã
            hn.sending_message(message, bot, '–û–∂–∏–¥–∞—é —É–∫–∞–∑–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ãü§î', keyboard=schedule_keyboard())
        elif message.text in sets.calls:
            # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∑–≤–æ–Ω–∫–æ–≤
            hn.calls_handler(message, bot, Mcalls, Bcalls, Scalls, keyboard1=basic_keyboard())
            hn.number_requests(message)
            hn.sending_message(message, bot, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –∏–ª–∏ —Ä–∞–∑–¥–µ–ª, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.üòâ', keyboard=basic_keyboard())
        else:
            hn.sending_message(message, bot, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –∏–ª–∏ —Ä–∞–∑–¥–µ–ª, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.üòâ', keyboard=basic_keyboard())


'''# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def answer(call):
    message = call.message
    if call.data == 'fix':
        bot.pin_chat_message(chat_id=message.chat.id, message_id=hn.to_pin[0].message_id)
'''

bot.infinity_polling()
