from telebot.types import InputMediaPhoto
edge = 'BT'
edgeNum = 51.0


def secondary_functions(message, bot, keyboard):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã(–ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å)"""
    msg = bot.send_message(message.chat.id, f'–ü–æ–∫–∞ —á—Ç–æ —è –º–æ–≥—É –Ω–µ–º–Ω–æ–≥–æ, –Ω–æ —Å –í–∞—à–µ–π –ø–æ–º–æ—â—å—é —è —Å—Ç–∞–Ω—É –ª—É—á—à–∏–º '
                                            f'–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–ºüìù\n\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–º–æ—á—å –º–Ω–µ —Å—Ç–∞—Ç—å –ª—É—á—à–µ, –Ω–∞–ø–∏—Å–∞–≤ –º–æ–µ–º—É '
                                            f'—Å–æ–∑–¥–∞—Ç–µ–ª—é. –ú—ã –±—É–¥–µ–º –æ—á–µ–Ω—å —Ä–∞–¥—ã —É—Å–ª—ã—à–∞—Ç—å –í–∞—à–µ –º–Ω–µ–Ω–∏–µ –∏ '
                                            f'–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!\n\n@arduinoespruino', reply_markup=keyboard)


def main_func_handler(message, dict, bot, keyboard):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π. –ü–æ–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏—é
    —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ."""
    # –∑–∞–ø–∏—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—â–µ–Ω–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    if dict.get(message.chat.id, None) is None:
        dict[message.chat.id] = []
    dict[message.chat.id].append(message.text)
    # –æ—Ç–ø—Ä–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—â–µ–Ω–∏–µ
    msg = bot.send_message(message.chat.id,
                           '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
                           reply_markup=keyboard)


def group_handler(message, dict, bot, keyboard):
    """–û–±—Ä–∞–±–æ—Ç—á–∫–∏ –≥—Ä—É–ø–ø"""
    # –∑–∞–∫–∏–Ω–µ–º –∏–Ω—Ñ—É –æ –≥—Ä—É–ø–ø–µ –≤ —Å–ª–æ–≤–∞—Ä–∏–∫
    dict[message.chat.id].append(message.text)
    # –æ—Ç–ø—Ä–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—â–µ–Ω–∏–µ
    msg = bot.send_message(message.chat.id,
                           '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏',
                           reply_markup=keyboard)


def day_handler(message, dict, bot, keyboard):
    """–û–±—Ä–∞–±–æ—Ç—á–∫ –¥–Ω—è –∑–∞–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""

    # –∑–∞–∫–∏–Ω–µ–º –∏–Ω—Ñ—É –æ –≥—Ä—É–ø–ø–µ –≤ —Å–ª–æ–≤–∞—Ä–∏–∫
    dict[message.chat.id].append(message.text)

    # –æ—Ç–ø—Ä–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—â–µ–Ω–∏–µ
    msg = bot.send_message(message.chat.id, '–í—Å–ø–æ–º–∏–Ω–∞—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ü§î')


def get_schedule_handler(message, bot, file_path, user_data, dict, keyboard):
    """–§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –±–æ—Ç–∞"""
    global otvet
    import pandas as pd
    from time import sleep

    data = pd.read_html(file_path, header=0, index_col=0)[0].fillna('–Ω–µ—Ç')

    def first_processing(data):
        """–§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º"""
        # —É–¥–∞–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç—á–Ω—É—é –Ω–µ–Ω—É–∂–Ω—É—é —Å—Ç—Ä–æ–∫—É
        data = data.drop("Unnamed: 2", axis=1)
        # —É–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 3 –Ω–µ–Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
        data = data.drop([1.0, 2.0, 3.0, 4.0])
        # —É–¥–∞–ª—è–µ–º –ø–æ—Å–¥–µ–¥–Ω–∏–µ –Ω–µ–Ω—É–∂–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã –ø–æ—Å–ª–µ —Å—Ç–æ–ª–±—Ü–∞ BI
        all_colums = list(data.columns.values)
        last_index = all_colums.index(edge)
        bad_colums = all_colums[last_index + 1:]
        data = data.drop(bad_colums, axis=1)

    # –Ω–∞–ø–∏—à–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–π –≥—Ä—É–ø–ø—ã
    def get_schedule(ds, grop_name, found_line_name):
        # –Ω–∞–π–¥–µ–º –∏–Ω–¥–µ–∫—Å —Å—Ç–æ–ª–±—Ü—ã —Å –Ω–æ–º–µ—Ä–æ–º —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã
        indx = ds.loc[found_line_name].tolist().index(grop_name)

        # –Ω–∞–π–¥–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –ø–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É
        columns_names = ["A", "B", "C", ds.columns[indx], ds.columns[indx + 1]]

        # –≤–µ—Ä–Ω–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º

        return ds.get(columns_names).loc[7.0:edgeNum]

    first_processing(data)
    example_grop = get_schedule(data, user_data[1], 5.0)
    result = example_grop.values.tolist()

    # —Å–¥–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –¥–æ—Å—Ç–∞–Ω–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ –¥–Ω—è
    def get_xz(ds, day_name):
        # –Ω–∞–π–¥–µ–º –∏–Ω–¥–µ–∫—Å –Ω—É–∂–Ω–æ–≥–æ –¥–Ω—è
        indx = example_grop["A"].to_list().index(day_name)

        # –ø–æ–ª—É—á–∏–º –∞–¥—Ä–µ—Å–∞ –Ω—É–∂–Ω—ã—Ö —è—á–µ–µ–∫
        start = ds.index.to_list()[indx]
        end = ds.index.to_list()[indx + 5]

        return ds.loc[start: end]

    example_day = get_xz(example_grop, user_data[2])
    result = example_day.values.tolist()
    s = ''
    for day, pare, time, sub, gruop in result:
        s += f'{time}\t {sub}\t {gruop}\n'
    sleep(1)
    msg = bot.send_message(message.chat.id, f'{s} \n–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ!\n–£–¥–∞—á–Ω–æ–≥–æ –¥–Ω—èüòä', reply_markup=keyboard)
    # –£–¥–∞–ª—è—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–Ω—è
    del s


def get_mon_schedule_handler(message, bot, file_path, user_data, dict, keyboard):
    """–§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –±–æ—Ç–∞ –¥–ª—è –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞"""
    global otvet
    import pandas as pd
    from time import sleep
    data = pd.read_html(file_path, header=0, index_col=0)[0].fillna('–Ω–µ—Ç')

    def first_processing(data):
        """–§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º"""
        # —É–¥–∞–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç—á–Ω—É—é –Ω–µ–Ω—É–∂–Ω—É—é —Å—Ç—Ä–æ–∫—É
        data = data.drop("Unnamed: 2", axis=1)
        # —É–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 3 –Ω–µ–Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
        data = data.drop([1.0, 2.0, 3.0, 4.0])
        # —É–¥–∞–ª—è–µ–º –ø–æ—Å–¥–µ–¥–Ω–∏–µ –Ω–µ–Ω—É–∂–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã –ø–æ—Å–ª–µ —Å—Ç–æ–ª–±—Ü–∞ BI
        all_colums = list(data.columns.values)
        last_index = all_colums.index(edge)
        bad_colums = all_colums[last_index + 1:]
        data = data.drop(bad_colums, axis=1)

    # –Ω–∞–ø–∏—à–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–π –≥—Ä—É–ø–ø—ã
    def get_schedule(ds, grop_name, found_line_name):
        # –Ω–∞–π–¥–µ–º –∏–Ω–¥–µ–∫—Å —Å—Ç–æ–ª–±—Ü—ã —Å –Ω–æ–º–µ—Ä–æ–º —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã
        indx = ds.loc[found_line_name].tolist().index(grop_name)

        # –Ω–∞–π–¥–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –ø–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É
        columns_names = ["A", "B", "C", ds.columns[indx], ds.columns[indx + 1]]

        # –≤–µ—Ä–Ω–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º

        return ds.get(columns_names).loc[8.0:edgeNum]

    first_processing(data)
    example_grop = get_schedule(data, user_data[1], 5.0)
    result = example_grop.values.tolist()

    # —Å–¥–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –¥–æ—Å—Ç–∞–Ω–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ –¥–Ω—è
    def get_xz(ds, day_name):
        # –Ω–∞–π–¥–µ–º –∏–Ω–¥–µ–∫—Å –Ω—É–∂–Ω–æ–≥–æ –¥–Ω—è
        indx = example_grop["A"].to_list().index(day_name)

        # –ø–æ–ª—É—á–∏–º –∞–¥—Ä–µ—Å–∞ –Ω—É–∂–Ω—ã—Ö —è—á–µ–µ–∫
        start = ds.index.to_list()[indx]
        end = ds.index.to_list()[indx + 6]

        return ds.loc[start: end]

    example_day = get_xz(example_grop, user_data[2])
    result = example_day.values.tolist()
    s = ''
    for day, pare, time, sub, gruop in result:
        s += f'{time}\t {sub}\t {gruop}\n'
    sleep(1)
    msg = bot.send_message(message.chat.id, f'{s} \n–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ!\n–£–¥–∞—á–Ω–æ–≥–æ –¥–Ω—èüòä', reply_markup=keyboard)
    # –£–¥–∞–ª—è—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–Ω—è
    del s


def calls_handler(message, bot, Mcalls, Bcalls, Scalls, keyboard):
    from time import sleep
    """–§—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—é—â–∞—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤"""
    msg = bot.send_message(message.chat.id, '–í—Å–ø–æ–º–∏–Ω–∞—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ü§î', reply_markup=keyboard)
    pic1 = open(Mcalls, "rb")
    pic2 = open(Bcalls, "rb")
    pic3 = open(Scalls, "rb")
    media = [InputMediaPhoto(pic1, caption='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä–µ–ø–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–ª—è –í–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞.'
                                           ' –£–¥–∞—á–Ω–æ–≥–æ –¥–Ω—èüòä'), InputMediaPhoto(pic2), InputMediaPhoto(pic3)]
    sleep(1)
    bot.send_media_group(message.chat.id, media)


def start_handler(message, dict, bot, keyboard):
    """–§—É–Ω–∫—Ü–∏—è –º–µ–Ω—é"""
    if dict.get(message.chat.id, None) is None:
        dict[message.chat.id] = []
    del dict[message.chat.id]
    msg = bot.send_message(message.chat.id, "–ß–µ–º —è –º–æ–≥—É –í–∞–º –ø–æ–º–æ—á—å?", reply_markup=keyboard)


def back_group(message, dict):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–º–µ–Ω—ã –≥—Ä—É–ø–ø—ã"""

    # —É–¥–∞–ª–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≥—Ä—É–ø–ø—ã
    dict[message.chat.id].pop()


def back_func_handler(message, bot, keyboard):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–º–µ–Ω—ã –≥—Ä—É–ø–ø—ã –≤—ã–±–æ—Ä –≥—Ä—É–ø–ø"""
    # –æ—Ç–ø—Ä–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—â–µ–Ω–∏–µ
    msg = bot.send_message(message.chat.id,
                           '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
                           reply_markup=keyboard)


def back_func_day(message, bot, keyboard):
    """–û–±—Ä–∞–±–æ—Ç—á–∫–∏ –≥—Ä—É–ø–ø"""
    # –æ—Ç–ø—Ä–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—â–µ–Ω–∏–µ
    msg = bot.send_message(message.chat.id,
                           '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏',
                           reply_markup=keyboard)
