# /////////////////////////////////////////////////////////////////////////////////////////////////////
#                                    –ú–û–î–£–õ–¨ –û–°–ù–û–í–ù–´–• –§–£–ù–ö–¶–ò–òÃÜ
# /////////////////////////////////////////////////////////////////////////////////////////////////////

# –ò–º–ø–æ—Ä—Ç —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ç–æ
from telebot.types import InputMediaPhoto

# –ü–æ–¥–∫–ª—é—á–∞–µ–º MySQLite
import sqlite3

import sets

"""–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"""
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö 'dbase.db', –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç –æ–Ω–∞ —Å–æ–∑–¥–∞—Å—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
conn = sqlite3.connect('base.db', check_same_thread=False)
# –°–æ–∑–¥–∞—ë–º –∫—É—Ä—Å–æ—Ä
cur = conn.cursor()
print("–ü–æ–¥–∫–ª—é—á–µ–Ω –∫ SQLite")
# cur.execute('''CREATE TABLE users (id TEXT, nickname TEXT, droup TEXT, day TEXT, nofr INTEGER)''')
# id = message.chat.id
# nickname = –Ω–∏–∫ –≤ —Ç–≥
# grop = –≥—Ä—É–ø–ø–∞
# day = –¥–µ–Ω—å
# nofr = –∫–æ–ª-–≤–æ –æ–±—Ä–∞—â–µ–Ω–∏–π

# cur.close()
# print('////base close////')

edge = 'BT'
edgeNum = 51.0


def start_handler(message, bot, keyboard):
    """–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç —é–∑–µ—Ä–∞ –≤ –±–∞–∑—É –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É"""
    cur.execute("""INSERT INTO users
                          (id, nickname, droup, day, nofr)
                          VALUES
                          (?, ?, '', '', 0);""", (message.chat.id, message.from_user.username))
    conn.commit()
    # –æ—Ç–ø—Ä–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = bot.send_message(message.chat.id,
                           '–Ø –Ω–æ–≤—ã–π –∫—Ä—É—Ç–æ–π –ø—Ä–∏–≤–µ—Ç –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
                           reply_markup=keyboard)


def sending_message(message, bot, text, keyboard):
    """–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    # –û—Ç–ø—Ä–∞–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –¥–æ–±–∞–≤–∏–º –Ω—É–∂–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    msg = bot.send_message(message.chat.id, text, reply_markup=keyboard)


def group_handler(message, bot, keyboard):
    """–û–±—Ä–∞–±–æ—Ç—á–∫–∏ –≥—Ä—É–ø–ø"""
    # –∑–∞–∫–∏–Ω–µ–º –∏–Ω—Ñ—É –æ –≥—Ä—É–ø–ø–µ –≤ –±–∞–∑—É
    cur.execute('UPDATE users SET  droup = ? WHERE id = ?', (message.text, message.chat.id))
    conn.commit()
    # –æ—Ç–ø—Ä–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = bot.send_message(message.chat.id,
                           '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏',
                           reply_markup=keyboard)


def day_handler(message, bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∫–∏ –¥–Ω–µ–∏ÃÜ –Ω–µ–¥–µ–ª–∏"""
    # –∑–∞–∫–∏–Ω–µ–º –∏–Ω—Ñ—É –æ –≥—Ä—É–ø–ø–µ –≤ –±–∞–∑—É
    cur.execute('UPDATE users SET  day = ? WHERE id = ?', (message.text, message.chat.id))
    conn.commit()


def get_schedule_handler(message, bot, file_path, keyboard):
    """–§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –±–æ—Ç–∞"""
    global otvet
    import pandas as pd

    data = pd.read_html(file_path, encoding='utf-8', header=0, index_col=0)[0].fillna('–Ω–µ—Ç')
    # –æ—Ç–ø—Ä–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = bot.send_message(message.chat.id, '–í—Å–ø–æ–º–∏–Ω–∞—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ü§î')

    def first_processing(data):
        """–§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º"""
        # —É–¥–∞–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç—á–Ω—É—é –Ω–µ–Ω—É–∂–Ω—É—é —Å—Ç—Ä–æ–∫—É
        data = data.drop("Unnamed: 2", axis=1)
        # —É–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 3 –Ω–µ–Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
        data = data.drop([1.0, 2.0, 3.0, 4.0])
        # —É–¥–∞–ª—è–µ–º –ø–æ—Å–¥–µ–¥–Ω–∏–µ –Ω–µ–Ω—É–∂–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã –ø–æ—Å–ª–µ —Å—Ç–æ–ª–±—Ü–∞ BI
        all_colums = list(data.columns.values)
        last_index = all_colums.index(edge)
        bad_colums = all_colums[last_index + 1:]
        data = data.drop(bad_colums, axis=1)

    # –Ω–∞–ø–∏—à–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–π –≥—Ä—É–ø–ø—ã
    def get_schedule(ds, grop_name, found_line_name):
        # –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–µ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –ª–∏ —Å–µ–≥–æ–¥–Ω—è
        global concl
        if message.text == sets.mon:
            edgeCon = 8.0
            concl = 7
        else:
            edgeCon = 7.0
            concl = 5

        # –Ω–∞–π–¥–µ–º –∏–Ω–¥–µ–∫—Å —Å—Ç–æ–ª–±—Ü—ã —Å –Ω–æ–º–µ—Ä–æ–º —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã
        indx = ds.loc[found_line_name].tolist().index(grop_name)

        # –Ω–∞–π–¥–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –ø–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É
        columns_names = ["A", "B", "C", ds.columns[indx], ds.columns[indx + 1]]

        # –≤–µ—Ä–Ω–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º

        return ds.get(columns_names).loc[edgeCon:edgeNum]

    # –ù–∞–π–¥—ë–º –¥–∞—Ç—É –∏ –≥—Ä—É–ø–ø—É
    cur.execute("SELECT droup, day FROM users WHERE id = ?", (message.chat.id,))
    user_data = cur.fetchone()

    first_processing(data)
    example_grop = get_schedule(data, user_data[0], 5.0)
    result = example_grop.values.tolist()

    # —Å–¥–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –¥–æ—Å—Ç–∞–Ω–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ –¥–Ω—è
    def get_xz(ds, day_name):
        # –Ω–∞–π–¥–µ–º –∏–Ω–¥–µ–∫—Å –Ω—É–∂–Ω–æ–≥–æ –¥–Ω—è
        indx = example_grop["A"].to_list().index(day_name)

        # –ø–æ–ª—É—á–∏–º –∞–¥—Ä–µ—Å–∞ –Ω—É–∂–Ω—ã—Ö —è—á–µ–µ–∫
        start = ds.index.to_list()[indx]
        end = ds.index.to_list()[indx + concl]

        return ds.loc[start: end]

    example_day = get_xz(example_grop, user_data[1])
    result = example_day.values.tolist()
    s = f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {user_data[1]}\n–î–ª—è –≥—Ä—É–ø–ø—ã {user_data[0]}:\n\n'
    for day, pare, time, sub, gruop in result:
        s += f'{time}\t {sub}\t {gruop}\n'

    bot.delete_message(message.chat.id, msg.id)
    msg = bot.send_message(message.chat.id, f'{s} \n–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ!\n–£–¥–∞—á–Ω–æ–≥–æ –¥–Ω—èüòä', reply_markup=keyboard)
    # –£–¥–∞–ª—è—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–Ω—è
    del s


def calls_handler(message, bot, Mcalls, Bcalls, Scalls, keyboard1):
    """–§—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—é—â–∞—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤"""
    msg = bot.send_message(message.chat.id, '–í—Å–ø–æ–º–∏–Ω–∞—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ü§î',
                           reply_markup=keyboard1)
    bot.delete_message(message.chat.id, msg.id)

    pic1 = open(Mcalls, "rb")
    pic2 = open(Bcalls, "rb")
    pic3 = open(Scalls, "rb")
    media = [InputMediaPhoto(pic1), InputMediaPhoto(pic2), InputMediaPhoto(pic3)]
    to_pin = bot.send_media_group(message.chat.id, media)
    msg = bot.send_message(message.chat.id, f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –ó–∞–∫—Ä–µ–ø–∏–ª –¥–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞\n–£–¥–∞—á–Ω–æ–≥–æ –¥–Ω—èüòä',
                           reply_markup=keyboard1)
    bot.pin_chat_message(chat_id=message.chat.id, message_id=to_pin[0].message_id)


def number_requests(message):
    """–§—É–Ω–∫—Ü–∏—è –ø–æ–¥—Å—á—ë—Ç–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π"""
    # –ë–µ—Ä—ë–º nofr
    cur.execute("SELECT nofr FROM users WHERE id = ?", (message.chat.id,))
    nofr = cur.fetchone()
    nofr = nofr[0]
    cur.execute("UPDATE users SET nofr = ? WHERE id = ?", (nofr + 1, message.chat.id))
    conn.commit()
